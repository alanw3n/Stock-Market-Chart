{"ast":null,"code":"var _jsxFileName = \"/Users/alanwen/Desktop/React/Memes/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Plot from 'react-plotly.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      equityName: \"\",\n      timeSeries: \"\",\n      interval: \"\",\n      outputSize: \"\",\n      x_val: [],\n      open: [],\n      high: [],\n      low: [],\n      close: []\n    };\n    this.updateGraph = this.updateGraph.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentDidMount() {\n    this.updateGraph();\n  }\n\n  updateGraph() {\n    if (this.state.equityName === \"\" || this.state.timeSeries === \"\") return;\n    let url;\n    let timeSeries;\n\n    if (this.state.timeSeries === \"TIME_SERIES_INTRADAY\") {\n      url = \"https://alpha-vantage.p.rapidapi.com/query?datatype=json&output_size=compact&interval=\" + this.state.interval + \"&function=TIME_SERIES_INTRADAY&symbol=\" + this.state.equityName;\n      timeSeries = 'Time Series (' + this.state.interval + ')';\n    } else if (this.state.timeSeries === \"TIME_SERIES_DAILY\") {\n      url = \"https://alpha-vantage.p.rapidapi.com/query?outputsize=compact&datatype=json&function=TIME_SERIES_DAILY_ADJUSTED&symbol=\" + this.state.equityName;\n      timeSeries = 'Time Series (Daily)';\n    } else if (this.state.timeSeries === \"TIME_SERIES_WEEKLY\") {\n      url = \"https://alpha-vantage.p.rapidapi.com/query?datatype=json&function=TIME_SERIES_WEEKLY_ADJUSTED&symbol=\" + this.state.equityName;\n      timeSeries = \"Weekly Adjusted Time Series\";\n    } else {\n      url = \"https://alpha-vantage.p.rapidapi.com/query?datatype=json&symbol=\" + this.state.equityName + \"&function=TIME_SERIES_MONTHLY_ADJUSTED\";\n      timeSeries = \"Monthly Adjusted Time Series\";\n    }\n\n    fetch(url, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"alpha-vantage.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"230d86db60msheb2e40d44790598p1915e2jsn5074c9944675\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      let x_array = [];\n      let open_array = [];\n      let high_array = [];\n      let low_array = [];\n      let close_array = [];\n\n      for (var key in data[timeSeries]) {\n        x_array.push(key);\n        open_array.push(data[timeSeries][key]['1. open']);\n        high_array.push(data[timeSeries][key]['2. high']);\n        low_array.push(data[timeSeries][key]['3. low']);\n        close_array.push(data[timeSeries][key]['4. close']);\n      }\n\n      this.setState({\n        x_val: x_array,\n        open: open_array,\n        high: high_array,\n        low: low_array,\n        close: close_array\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"equityName\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.equityName,\n      placeholder: \"Type Equity Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"timeSeries\",\n      value: this.state.timeSeries,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"-- Please select a time series --\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"TIME_SERIES_INTRADAY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Intraday\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"TIME_SERIES_DAILY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Daily\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"TIME_SERIES_WEEKLY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Weekly\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"TIME_SERIES_MONTHLY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Monthly\"))), this.state.timeSeries === \"TIME_SERIES_INTRADAY\" && /*#__PURE__*/React.createElement(\"select\", {\n      name: \"interval\",\n      value: this.state.interval,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"-- Please select a time interval --\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1min\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"1min\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5min\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"5min\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"15min\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"15min\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"30min\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"30min\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"60min\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"60min\")), (this.state.timeSeries === \"TIME_SERIES_DAILY\" || this.state.timeSeries == \"TIME_SERIES_INTRADAY\") && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"outputSize\",\n      type: \"radio\",\n      value: \"compact\",\n      checked: this.state.outputSize === \"compact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"outputSize\",\n      type: \"radio\",\n      value: \"full\",\n      checked: this.state.outputSize === \"full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.updateGraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Plot, {\n      className: \"plot\",\n      data: [{\n        x: this.state.x_val,\n        open: this.state.open,\n        high: this.state.high,\n        low: this.state.low,\n        close: this.state.close,\n        type: 'candlestick',\n        mode: 'lines+markers',\n        marker: {\n          color: 'red'\n        }\n      }],\n      layout: {\n        width: 800,\n        height: 600,\n        title: 'A Fancy Plot'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alanwen/Desktop/React/Memes/src/App.js"],"names":["React","Component","Plot","App","constructor","state","equityName","timeSeries","interval","outputSize","x_val","open","high","low","close","updateGraph","bind","handleChange","event","name","value","target","setState","componentDidMount","url","fetch","then","response","json","data","console","log","x_array","open_array","high_array","low_array","close_array","key","push","render","x","type","mode","marker","color","width","height","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Plot from 'react-plotly.js';\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {equityName: \"\", timeSeries: \"\", interval:\"\", outputSize:\"\", x_val: [], open: [], high: [], low: [], close: []}\n    this.updateGraph = this.updateGraph.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event){\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  componentDidMount(){\n    this.updateGraph();\n  }\n\n  updateGraph(){\n    if(this.state.equityName === \"\" || this.state.timeSeries === \"\") return;\n    let url;\n    let timeSeries\n    if(this.state.timeSeries === \"TIME_SERIES_INTRADAY\"){\n      url = \"https://alpha-vantage.p.rapidapi.com/query?datatype=json&output_size=compact&interval=\"+this.state.interval+\"&function=TIME_SERIES_INTRADAY&symbol=\"+this.state.equityName;\n      timeSeries = 'Time Series ('+this.state.interval+')';\n    }\n    else if(this.state.timeSeries === \"TIME_SERIES_DAILY\"){\n      url = \"https://alpha-vantage.p.rapidapi.com/query?outputsize=compact&datatype=json&function=TIME_SERIES_DAILY_ADJUSTED&symbol=\"+this.state.equityName;\n      timeSeries = 'Time Series (Daily)';\n    }\n    else if(this.state.timeSeries === \"TIME_SERIES_WEEKLY\"){\n      url = \"https://alpha-vantage.p.rapidapi.com/query?datatype=json&function=TIME_SERIES_WEEKLY_ADJUSTED&symbol=\"+this.state.equityName;\n      timeSeries = \"Weekly Adjusted Time Series\";\n    }\n    else{\n      url = \"https://alpha-vantage.p.rapidapi.com/query?datatype=json&symbol=\"+this.state.equityName+\"&function=TIME_SERIES_MONTHLY_ADJUSTED\";\n      timeSeries = \"Monthly Adjusted Time Series\"\n    }\n \n    fetch(url, {\n      \"method\": \"GET\",\n      \"headers\": {\n      \"x-rapidapi-host\": \"alpha-vantage.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"230d86db60msheb2e40d44790598p1915e2jsn5074c9944675\"\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        let x_array = []\n        let open_array = []\n        let high_array = []\n        let low_array = []\n        let close_array = []\n        for(var key in data[timeSeries]){\n          x_array.push(key)\n          open_array.push(data[timeSeries][key]['1. open'])\n          high_array.push(data[timeSeries][key]['2. high'])\n          low_array.push(data[timeSeries][key]['3. low'])\n          close_array.push(data[timeSeries][key]['4. close'])\n        }\n        this.setState({x_val: x_array, open: open_array, high: high_array, low: low_array, close: close_array})\n      })\n  }\n\n  render(){\n    return(\n      <div>\n        <div>\n          <form>\n            <input name=\"equityName\" type=\"text\" onChange={this.handleChange} value={this.state.equityName} \n            placeholder=\"Type Equity Name\"/>\n            <select name=\"timeSeries\" value={this.state.timeSeries} onChange={this.handleChange}>\n              <option value=\"\">-- Please select a time series --</option>\n              <option value=\"TIME_SERIES_INTRADAY\">Intraday</option>\n              <option value=\"TIME_SERIES_DAILY\">Daily</option>\n              <option value=\"TIME_SERIES_WEEKLY\">Weekly</option>\n              <option value=\"TIME_SERIES_MONTHLY\">Monthly</option>\n            </select>\n          </form>\n\n          {this.state.timeSeries === \"TIME_SERIES_INTRADAY\" && \n          <select name=\"interval\" value={this.state.interval} onChange={this.handleChange}>\n            <option value=\"\">-- Please select a time interval --</option>\n            <option value=\"1min\">1min</option>\n            <option value=\"5min\">5min</option>\n            <option value=\"15min\">15min</option>\n            <option value=\"30min\">30min</option>\n            <option value=\"60min\">60min</option>\n          </select>}\n\n          {(this.state.timeSeries === \"TIME_SERIES_DAILY\" || this.state.timeSeries == \"TIME_SERIES_INTRADAY\") &&\n          <div> \n            <input name=\"outputSize\" type=\"radio\" value=\"compact\" checked={this.state.outputSize === \"compact\"} />\n            <input name=\"outputSize\" type=\"radio\" value=\"full\" checked={this.state.outputSize === \"full\"}/>\n          </div>}\n\n          <button onClick={this.updateGraph}>Submit</button>\n        </div>\n        <Plot className=\"plot\"\n        data={[\n          {\n            x: this.state.x_val,\n            open: this.state.open,\n            high: this.state.high,\n            low: this.state.low,\n            close: this.state.close,\n            type: 'candlestick',\n            mode: 'lines+markers',\n            marker: {color: 'red'},\n          },\n        ]}\n        layout={ {width: 800, height: 600, title: 'A Fancy Plot'} }\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}