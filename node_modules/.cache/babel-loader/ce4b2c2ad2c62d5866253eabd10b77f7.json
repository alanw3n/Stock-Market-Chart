{"ast":null,"code":"var _jsxFileName = \"/Users/alanwen/Desktop/React/Memes/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Plot from 'react-plotly.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      equityName: \"\",\n      x_val: [],\n      y_val: []\n    };\n    this.updateGraph = this.updateGraph.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateGraph();\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  updateGraph() {\n    fetch(\"https://alpha-vantage.p.rapidapi.com/query?datatype=json&output_size=compact&interval=5min&function=TIME_SERIES_INTRADAY&symbol=MSFT\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"alpha-vantage.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"230d86db60msheb2e40d44790598p1915e2jsn5074c9944675\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      let x = [];\n      let y = [];\n\n      for (var key in data['Time Series (5min)']) {\n        x.push(key);\n        y.push(data['Time Series (5min)'][key]['1. open']);\n      }\n\n      this.setState({\n        x_val: x,\n        y_val: y\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"equityName\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.equityName,\n      placeholder: \"Type Equity Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Plot, {\n      className: \"plot\",\n      data: [{\n        x: this.state.x_val,\n        y: this.state.y_val,\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: {\n          color: 'red'\n        }\n      }, {\n        type: 'bar',\n        x: 'Time',\n        y: 'Highs'\n      }],\n      layout: {\n        width: 700,\n        height: 500,\n        title: 'A Fancy Plot'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alanwen/Desktop/React/Memes/src/App.js"],"names":["React","Component","Plot","App","constructor","state","equityName","x_val","y_val","updateGraph","bind","handleChange","componentDidMount","event","name","value","target","setState","fetch","then","response","json","data","console","log","x","y","key","push","render","type","mode","marker","color","width","height","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AACzBG,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE,EAAb;AAAkBC,MAAAA,KAAK,EAAE,EAAzB;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,iBAAiB,GAAE;AACjB,SAAKH,WAAL;AACD;;AAEDE,EAAAA,YAAY,CAACE,KAAD,EAAO;AACjB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKC,QAAL,CAAc;AACZ,OAACH,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDN,EAAAA,WAAW,GAAE;AACXS,IAAAA,KAAK,CAAC,sIAAD,EAAyI;AAC5I,gBAAU,KADkI;AAE5I,iBAAW;AACT,2BAAmB,8BADV;AAET,0BAAkB;AAFT;AAFiI,KAAzI,CAAL,CAOGC,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAIG,CAAC,GAAG,EAAR;AACA,UAAIC,CAAC,GAAG,EAAR;;AACA,WAAI,IAAIC,GAAR,IAAeL,IAAI,CAAC,oBAAD,CAAnB,EAA0C;AACxCG,QAAAA,CAAC,CAACG,IAAF,CAAOD,GAAP;AACAD,QAAAA,CAAC,CAACE,IAAF,CAAON,IAAI,CAAC,oBAAD,CAAJ,CAA2BK,GAA3B,EAAgC,SAAhC,CAAP;AACD;;AACD,WAAKV,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAEkB,CAAR;AAAWjB,QAAAA,KAAK,EAAEkB;AAAlB,OAAd;AACD,KAjBH;AAkBD;;AAEDG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,QAAQ,EAAE,KAAKlB,YAApD;AAAkE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,UAApF;AACA,MAAA,WAAW,EAAC,kBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AACA,MAAA,IAAI,EAAE,CACJ;AACEmB,QAAAA,CAAC,EAAE,KAAKpB,KAAL,CAAWE,KADhB;AAEEmB,QAAAA,CAAC,EAAE,KAAKrB,KAAL,CAAWG,KAFhB;AAGEsB,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,IAAI,EAAE,eAJR;AAKEC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AALV,OADI,EAQJ;AAACH,QAAAA,IAAI,EAAE,KAAP;AAAcL,QAAAA,CAAC,EAAE,MAAjB;AAAyBC,QAAAA,CAAC,EAAE;AAA5B,OARI,CADN;AAWA,MAAA,MAAM,EAAG;AAACQ,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE,GAArB;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAmBD;;AA5DwB;;AA+D3B,eAAejC,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Plot from 'react-plotly.js';\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {equityName: \"\",  x_val: [], y_val: []}\n    this.updateGraph = this.updateGraph.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount(){\n    this.updateGraph();\n  }\n\n  handleChange(event){\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  updateGraph(){\n    fetch(\"https://alpha-vantage.p.rapidapi.com/query?datatype=json&output_size=compact&interval=5min&function=TIME_SERIES_INTRADAY&symbol=MSFT\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"alpha-vantage.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"230d86db60msheb2e40d44790598p1915e2jsn5074c9944675\"\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        let x = []\n        let y = []\n        for(var key in data['Time Series (5min)']){\n          x.push(key)\n          y.push(data['Time Series (5min)'][key]['1. open'])\n        }\n        this.setState({x_val: x, y_val: y})\n      })\n  }\n\n  render(){\n    return(\n      <div>\n        <input name=\"equityName\" type=\"text\" onChange={this.handleChange} value={this.state.equityName} \n        placeholder=\"Type Equity Name\"/>\n        <Plot className=\"plot\"\n        data={[\n          {\n            x: this.state.x_val,\n            y: this.state.y_val,\n            type: 'scatter',\n            mode: 'lines+markers',\n            marker: {color: 'red'},\n          },\n          {type: 'bar', x: 'Time', y: 'Highs'},\n        ]}\n        layout={ {width: 700, height: 500, title: 'A Fancy Plot'} }\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}